{"mappings":"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","sources":["src/index.ts","src/components/Guide/index.tsx","src/components/Guide/styles.module.css","src/components/ChannelRow/index.tsx","src/components/Show/index.tsx","src/utils/constants.ts","src/components/Show/styles.module.css","src/components/ChannelRow/styles.module.css","src/components/Channel/index.tsx","src/components/Channel/styles.module.css","src/components/ChannelColumn/index.tsx","src/components/ChannelColumn/styles.module.css","src/components/TimeRow/index.tsx","src/components/TimeRow/styles.module.css","src/components/LiveIndicator/index.tsx","src/components/LiveIndicator/styles.module.css"],"sourcesContent":["export * from './components/Guide';\n","import React, { useRef } from 'react';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { EPG } from '../../hooks/useEpg';\nimport * as classes from './styles.module.css';\nimport ChannelRow, { ChannelRowProps } from '../ChannelRow';\nimport Channel, { ChannelProps } from '../Channel';\nimport ChannelColumn from '../ChannelColumn';\nimport TimeRow from '../TimeRow';\nimport { MINUTE_SIZE } from '../../utils/constants';\nimport LiveIndicator from '../LiveIndicator';\n\ndayjs.extend(customParseFormat);\n\ntype Props = {\n  epg: EPG;\n};\n\nconst Guide = ({ epg }: Props) => {\n  const liveRef = useRef<HTMLDivElement>(null);\n\n  const channels: ChannelProps[] = [];\n  const schedules: ChannelRowProps[] = [];\n  let startHour = 0;\n  let endHour = 0;\n\n  epg.channels.forEach((channel) => {\n    channels.push({\n      name: channel.title,\n      logo: channel.images.logo,\n    });\n    schedules.push({ schedules: channel.schedules });\n  });\n\n  // Get lowest hour of first show and highest hour of last show on any channel\n  schedules.forEach((channel) => {\n    if (channel.schedules.length > 0) {\n      const firstHour = dayjs(channel.schedules[0].start).hour();\n      const lastHour = dayjs(channel.schedules[channel.schedules.length - 1].end).hour();\n      if (firstHour < startHour) {\n        startHour = firstHour;\n      }\n      if (lastHour > endHour) {\n        endHour = lastHour;\n      }\n    }\n  });\n\n  const minutesFromStart = dayjs().diff(dayjs(`${startHour}:00:00`, 'H:mm:ss'), 'minutes');\n  // 150 is width of the ChannelColumn\n  const liveOffset = minutesFromStart * MINUTE_SIZE + 150;\n\n  const handleNowButtonClick = () => {\n    liveRef.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest',\n      inline: 'center',\n    });\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.guide}>\n        <div className={classes.channelColumn}>\n          <ChannelColumn>\n            {channels.map(({ logo, name }) => (\n              <Channel key={name} logo={logo} name={name} />\n            ))}\n          </ChannelColumn>\n        </div>\n        <div className={classes.timeRowContainer}>\n          <LiveIndicator style={{ left: liveOffset }} ref={liveRef} />\n          <TimeRow startHour={startHour} endHour={endHour} />\n          {schedules.map((channel, index) => {\n            return (\n              <ChannelRow\n                key={channels[index].name}\n                schedules={channel.schedules}\n                className={classes.scheduleLine}\n              />\n            );\n          })}\n        </div>\n        <button className={classes.nowButton} onClick={handleNowButtonClick} type=\"button\">\n          Now\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Guide;\n",".container {\n  position: relative;\n  height: 100vh;\n}\n\n.guide {\n  display: flex;\n  flex-direction: row;\n  overflow: auto;\n}\n.channelColumn {\n  position: absolute;\n  padding-top: 80px;\n  z-index: 100;\n}\n\n.scheduleLine {\n  padding-left: 150px;\n}\n.timeRow {\n  display: flex;\n}\n.timeRowContainer {\n  position: relative;\n}\n\n.nowButton {\n  position: fixed;\n  right: 40px;\n  bottom: 40px;\n  background-color: #e1a21e;\n  font-weight: bold;\n  font-size: 16px;\n  color: white;\n  text-transform: uppercase;\n  border: 0;\n  margin: 0;\n  padding: 20px;\n  border-radius: 5px;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport Show from '../Show';\nimport { Schedule } from '../../hooks/useEpg';\nimport * as classes from './styles.module.css';\n\nexport type ChannelRowProps = {\n  schedules: Schedule[];\n  className?: string;\n};\n\nconst ChannelRow = ({ schedules, className }: ChannelRowProps) => {\n  return (\n    <div className={classNames(classes.channelRow, className)}>\n      {schedules.map(({ title, start, end }) => {\n        return <Show key={`${start}-${end}-${title}`} title={title} start={start} end={end} />;\n      })}\n    </div>\n  );\n};\n\nexport default ChannelRow;\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport classNames from 'classnames';\nimport { MINUTE_SIZE } from '../../utils/constants';\nimport * as classes from './styles.module.css';\n\nexport type ShowProps = {\n  title: string;\n  start: string;\n  end: string;\n};\n\nconst Show = ({ title, start, end }: ShowProps) => {\n  const startDate = dayjs(start);\n  const endDate = dayjs(end);\n  const now = dayjs();\n  const isActive = now.isAfter(startDate) && now.isBefore(endDate);\n\n  const duration = endDate.diff(startDate, 'minutes');\n  const showWidth = duration * MINUTE_SIZE;\n\n  return (\n    <div\n      className={classNames(classes.show, isActive ? classes.active : undefined)}\n      style={{ width: showWidth, minWidth: showWidth, maxWidth: showWidth }}\n    >\n      <span className={classes.title}>{title}</span>\n      <span className={classes.time}>\n        {startDate.format('HH:mm')} - {endDate.format('HH:mm')}\n      </span>\n    </div>\n  );\n};\n\nexport default Show;\n","/* eslint-disable import/prefer-default-export */\nexport const MINUTE_SIZE = 9;\n",".show {\n  height: 130px;\n  background-color: #090909;\n  border-right: 1px solid #444444;\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-family: Arial, serif;\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.active {\n  background-color: #363636;\n}\n\n.title {\n  color: white;\n  margin-bottom: 5px;\n}\n\n.time {\n  color: #9c9c9c;\n}\n",".channelRow {\n  display: flex;\n  flex-direction: row;\n  height: 130px;\n  box-sizing: content-box;\n  border-bottom: 1px solid #444444;\n  border-left: 1px solid #444444;\n  background-color: #090909;\n}\n","import React from 'react';\nimport * as classes from './styles.module.css';\n\nexport type ChannelProps = {\n  logo: string;\n  name: string;\n};\nconst Channel = ({ logo, name }: ChannelProps) => {\n  return (\n    <div className={classes.channel}>\n      <img src={logo} alt={name} />\n    </div>\n  );\n};\n\nexport default Channel;\n",".channel {\n  background-color: #1a1a1a;\n  width: 150px;\n  height: 130px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid #444444;\n  box-sizing: content-box;\n  color: white;\n  font-weight: bold;\n  font-size: 16px;\n}\n\n.channel img {\n  max-width: 100px;\n  max-height: 40px;\n}\n","import React, { ReactNode } from 'react';\nimport * as classes from './styles.module.css';\n\nexport type ChannelColumnProps = {\n  children: ReactNode;\n};\n\nconst ChannelColumn = ({ children }: ChannelColumnProps) => {\n  return <div className={classes.channelColumn}>{children}</div>;\n};\n\nexport default ChannelColumn;\n",".channelColumn {\n  display: flex;\n  flex-direction: column;\n}\n","import React from 'react';\nimport * as classes from './styles.module.css';\nimport { MINUTE_SIZE } from '../../utils/constants';\n\ntype TimeRowProps = {\n  startHour: number;\n  endHour: number;\n};\n\nconst TimeRow = ({ startHour, endHour }: TimeRowProps) => {\n  const hours = [];\n  const hourWidth = 60 * MINUTE_SIZE;\n  for (let i = startHour; i <= endHour; i += 1) {\n    hours.push(\n      <div\n        className={classes.hourBox}\n        style={{ width: hourWidth, maxWidth: hourWidth, minWidth: hourWidth }}\n        key={i}\n      >\n        <span className={classes.time}>{i}:00</span>\n        <div className={classes.marker} />\n      </div>\n    );\n  }\n  return <div className={classes.timeRow}>{hours}</div>;\n};\n\nexport default TimeRow;\n",".timeRow {\n  display: flex;\n  flex-direction: row;\n  background-color: #1a1a1a;\n  width: 100%;\n}\n.hourBox {\n  height: 80px;\n  border-top: 1px solid #444444;\n  border-bottom: 1px solid #444444;\n  background-color: #1a1a1a;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-content: flex-end;\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n.hourBox:first-child {\n  margin-left: 150px;\n}\n\n.marker {\n  width: 1px;\n  background-color: #535353;\n  height: 16px;\n}\n.time {\n  display: block;\n  font-size: 24px;\n  font-weight: bold;\n  font-family: Arial, serif;\n  color: white;\n  transform: translateX(-50%);\n}\n","import React, { CSSProperties } from 'react';\nimport * as classes from './styles.module.css';\n\ntype LiveIndicatorProps = {\n  style?: CSSProperties;\n};\n\nconst LiveIndicator = React.forwardRef<HTMLDivElement, LiveIndicatorProps>(({ style }, ref) => {\n  return (\n    <div className={classes.container} style={style} ref={ref}>\n      <div className={classes.needle} />\n      <div className={classes.line} />\n    </div>\n  );\n});\n\nexport default LiveIndicator;\n","/* 8x69, 2px, #dea200 */\n\n.container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 5px);\n  align-items: center;\n  padding-top: 5px;\n  position: absolute;\n}\n\n.needle {\n  width: 8px;\n  height: 70px;\n  background-color: #dea200;\n  border-radius: 4px;\n}\n.line {\n  width: 1px;\n  height: 100%;\n  background-color: #dea200;\n}\n"],"names":[],"version":3,"file":"main.js.map"}